#!/usr/bin/env bash
image_tag=biopod/rdock:2013.1

usage() { echo "env-usage: $0 -e" 1>&2 ; echo "run-usage: $0 [-d] -r 'command'" 1>&2 ; }

while getopts ":her:d" opt
do
    case "${opt}" in
        h)  usage
            exit 0 ;;
        e)  env="true" ;;
        d)  detach="true" ;;
        r)  run="true" 
            command=${OPTARG} ;;
        \?) echo "Error: invalid option -${OPTARG}"
            exit 1 ;;
        :)  echo "Error: missing argument for -${OPTARG}"
            exit 1 ;;
        *)  usage
            exit 1 ;;
    esac
done

if [ "${env}" == "true" ] && [ "${detach}" == "true" ]
then
    echo "Error: -e and -d can not be used at the same time!"
    exit 1
fi
if [ "${env}" == "true" ] && [ "${run}" == "true" ]
then
    echo "Error: -e and -r can not be used at the same time!"
    exit 1
fi
if [ "${env}" != "true" ] && [ "${run}" != "true" ]
then
    echo "Error: either -e or -r should be specified!"
    exit 1
fi

if [ "${run}" == "true" ]
then
    if [ "${detach}" == "true" ]
    then
        echo "Starting one ${image_tag} container for a detach run; Binding /mnt to current dir -> $(pwd)"
        echo "To list the ids or names of the running containers, use:"
        echo "-> docker ps -a"
        echo "To kill a running container, use:"
        echo "-> docker kill CONTAINER_ID or docker kill CONTAINER_NAME"
        docker run --rm -d \
               --mount type=bind,source="$(realpath "$(pwd)")",target=/mnt \
               --user "$(id -u):$(id -g)" \
               ${image_tag} \
               bash -c "${command}"
    else
        echo "Starting one ${image_tag} container for a non-detach run; Binding /mnt to current dir -> $(pwd)"
        docker run --rm \
               --mount type=bind,source="$(realpath "$(pwd)")",target=/mnt \
               --user "$(id -u):$(id -g)" \
               ${image_tag} \
               bash -c "${command}"
    fi
elif [ "${env}" == "true" ]
then
    echo "Starting one ${image_tag} container environment; Binding /mnt to current dir -> $(pwd)"
    docker run --rm -it \
           --mount type=bind,source="$(realpath "$(pwd)")",target=/mnt \
           --user "$(id -u):$(id -g)" \
           ${image_tag}
fi

